# -*- coding: utf-8 -*-
"""LLMs.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/11dGxU9tGwFJsZJNNPClmKk6IkY0LmA3L
"""

pip install openai

import os
import openai
import json

#Loading the API key

with open("data.json", "r") as f:
  json_data = json.load(f)
  os.environ["OPENAI_API_KEY"] = json_data['API_KEY']
  openai.api_key = json_data["API_KEY"]
  os.environ["SERPAPI_API_KEY"] = json_data["API_KEY1"]

response = openai.Completion.create(model="text-davinci-003", prompt="say this is a test", temperature=0, max_tokens=7)

print(response)

""" **Langchain for building chains**

"""

!pip install langchain

from langchain.prompts import PromptTemplate
from langchain.llms import OpenAI

llm = OpenAI(temperature=0.9)
prompt = PromptTemplate(
    input_variables=["country"],
    template = "what is the national sport of {country}",
)

from langchain.chains import LLMChain
chain = LLMChain(llm=llm, prompt=prompt)

#Running the chain on a specific input
print(chain.run("India"))

"""# Agents can dynamically call chains based on user input"""

!pip install google-search-results

from langchain.agents import load_tools
from langchain.agents import initialize_agent
from langchain.agents import AgentType
from langchain.llms import OpenAI

# Load the model
llm = OpenAI(temperature=0)

# Load the tools
tools = load_tools(["serpapi", "llm-math"], llm=llm)

# Initialize the agent
agent = initialize_agent(tools, llm, agent=AgentType.ZERO_SHOT_REACT_DESCRIPTION, verbose=True)

# Run the agent
agent.run("What was the temperature in New York yesterday? Can you tell me the temperature in Kelvin?")